// Copyright (C) 2016  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Intel and sold by Intel or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/13/2017 16:42:26"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          vga_controller
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module vga_controller_vlg_vec_tst();
// constants                                           
// general purpose registers
reg iRST_n;
reg iVGA_CLK;
reg [7:0] index;
// wires                                               
wire [18:0] address;
wire [7:0] b_data;
wire [7:0] g_data;
wire oBLANK_n;
wire oHS;
wire oVS;
wire [7:0] r_data;

// assign statements (if any)                          
vga_controller i1 (
// port map - connection between master ports and signals/registers   
	.address(address),
	.b_data(b_data),
	.g_data(g_data),
	.iRST_n(iRST_n),
	.iVGA_CLK(iVGA_CLK),
	.index(index),
	.oBLANK_n(oBLANK_n),
	.oHS(oHS),
	.oVS(oVS),
	.r_data(r_data)
);
initial 
begin 
#1000000 $finish;
end 

// iRST_n
initial
begin
	iRST_n = 1'b0;
end 

// iVGA_CLK
always
begin
	iVGA_CLK = 1'b0;
	iVGA_CLK = #10000 1'b1;
	#10000;
end 
// index[ 7 ]
initial
begin
	index[7] = 1'b0;
end 
// index[ 6 ]
initial
begin
	index[6] = 1'b0;
end 
// index[ 5 ]
initial
begin
	index[5] = 1'b0;
end 
// index[ 4 ]
initial
begin
	index[4] = 1'b0;
end 
// index[ 3 ]
initial
begin
	index[3] = 1'b0;
end 
// index[ 2 ]
initial
begin
	index[2] = 1'b0;
end 
// index[ 1 ]
initial
begin
	index[1] = 1'b0;
end 
// index[ 0 ]
initial
begin
	index[0] = 1'b0;
end 
endmodule

